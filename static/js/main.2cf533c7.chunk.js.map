{"version":3,"sources":["components/UI/Card.js","components/NewExpense/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/NewExpense/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","onChangeFilter","target","value","ExpenseDate","Day","date","toLocaleString","day","Month","month","year","getFullYear","Expense","expenseAmount","amount","title","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMax","max","ExpenseChart","ChartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setfilteredYear","filteredExpenses","filter","toString","selected","selectedYear","ExpenseForm","EnteredTitle","EnteredAmount","EnteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","preState","type","min","step","onClick","stateManage","NewExpense","isEditing","seisEditing","state","savedData","random","console","log","onAddExpense","DUMMY_DATA","App","setExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2cf533c7.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) =>{\r\n    const classes = 'card ' + props.className;\r\n    return(\r\n    <div className={classes}>\r\n        {props.children}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const onYearchangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={onYearchangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\nconst ExpenseDate = (props) => {\r\n\r\n    const Day = props.date.toLocaleString('en-us', {day : '2-digit'});\r\n    const Month = props.date.toLocaleString('en-us', {month : 'long'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{Month}</div>\r\n            <div className='expense-date__year'>{year}</div>   \r\n            <div className='expense-date__day'>{Day}</div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport './ExpenseItem.css'\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst Expense = (props) => {\r\n    const expenseAmount = props.amount;\r\n\r\n    return (\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date = {props.date}></ExpenseDate>\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>$ {expenseAmount}</div>\r\n            </div>\r\n            \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expense;","import React from \"react\";\r\nimport Expense from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no Expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <Expense\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        ></Expense>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from 'react';\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0)\r\n    {\r\n        barFillHeight = Math.round((props.value/ props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{height:barFillHeight}}>\r\n                </div>\r\n            </div>\r\n            <div className='chart-bar__label'>\r\n                {props.label}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n\r\n  const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointsValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpenseChart = (props) => {\r\n\r\n    const ChartDataPoints = [\r\n        {label : 'Jan', value:0},\r\n        {label : 'Feb', value:0},\r\n        {label : 'Mar', value:0},\r\n        {label : 'Apr', value:0},\r\n        {label : 'May', value:0},\r\n        {label : 'Jun', value:0},\r\n        {label : 'Jul', value:0},\r\n        {label : 'Aug', value:0},\r\n        {label : 'Sep', value:0},\r\n        {label : 'Oct', value:0},\r\n        {label : 'Nov', value:0},\r\n        {label : 'Dec', value:0},\r\n    ];\r\n\r\n    for( const expense of props.expenses)\r\n    {\r\n        const expenseMonth = expense.date.getMonth();\r\n        ChartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={ChartDataPoints} />;\r\n}\r\n\r\nexport default ExpenseChart;","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"../NewExpense/ExpenseFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpenseChart from \"../NewExpense/ExpenseChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setfilteredYear] = useState(\"2020\");\r\n\r\n  const onChangeFilterHandler = (selectedYear) => {\r\n    setfilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={onChangeFilterHandler}\r\n      ></ExpensesFilter>\r\n      <ExpenseChart expenses = {filteredExpenses}></ExpenseChart>\r\n      <ExpenseList items={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, {useState} from \"react\";\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) =>{\r\n\r\n    // const [EnteredTitle, setEnteredTitle] = useState('');\r\n    // const [EnteredAmount, setEnteredAmount] = useState('0.0');\r\n    // const [EnteredDate, setEnteredDate] = useState('');\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        EnteredTitle:'',\r\n        EnteredAmount:0,\r\n        EnteredDate:''\r\n    });\r\n\r\n    const onTitleChangeHandler = (event) => {\r\n        setUserInput((preState) => {\r\n            return {...preState, EnteredTitle : event.target.value,}\r\n        });\r\n    };\r\n\r\n    const onAmountChangeHandler = (event) =>{\r\n        setUserInput((preState) => {\r\n            return {...preState, EnteredAmount : event.target.value,}\r\n        });\r\n    };\r\n\r\n    const onDateChangeHandler = (event) =>{\r\n        setUserInput((preState) => {\r\n            return {...preState, EnteredDate : event.target.value,}\r\n        });\r\n    };\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: userInput.EnteredTitle,\r\n            amount: +userInput.EnteredAmount,\r\n            date : new Date(userInput.EnteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setUserInput((preState) => {\r\n            return {...preState, EnteredTitle : '',}\r\n        });\r\n\r\n        setUserInput((preState) => {\r\n            return {...preState, EnteredAmount : '',}\r\n        });\r\n\r\n        setUserInput((preState) => {\r\n            return {...preState, EnteredDate : '',}\r\n        });\r\n        \r\n\r\n    };\r\n\r\n    const stateReturnHandler = () => {\r\n        props.stateManage(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmitHandler}>\r\n            <div className=\"new-expense__control\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type = \"text\" value={userInput.EnteredTitle} onChange={onTitleChangeHandler}></input>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type = \"number\" value={userInput.EnteredAmount} min = \"0.01\" step =\"0.01\" onChange={onAmountChangeHandler}></input>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type = \"date\" value={userInput.EnteredDate} min = \"2019-01-01\" max= \"2024-01-01\" onChange={onDateChangeHandler}></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button onClick={stateReturnHandler}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React, {useState} from \"react\";\r\nimport './NewExpense.css'\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, seisEditing] = useState(false);\r\n\r\n    const saveExpenseDatahandler = (savedData) => {\r\n        const expenseData = {\r\n          id:Math.random().toString(), ...savedData\r\n        };\r\n        console.log(expenseData);\r\n        props.onAddExpense(expenseData);\r\n        seisEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        seisEditing(true);\r\n    }\r\n\r\n    const endEditngHandler = state => {\r\n        seisEditing(state);\r\n    };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n        { !isEditing &&  <button onClick={startEditingHandler}>Add new Expense</button>}\r\n        { isEditing && <ExpenseForm stateManage = {endEditngHandler} onSaveExpenseData = {saveExpenseDatahandler}></ExpenseForm>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Car Insuarance\",\n    amount: 293.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e2\",\n    title: \"EMI\",\n    amount: 203.67,\n    date: new Date(2021, 2, 1),\n  },\n  {\n    id: \"e3\",\n    title: \"Shopping\",\n    amount: 103.67,\n    date: new Date(2021, 4, 3),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const AddDataHandler = (expense) => {\n    setExpenses((preState) => {\n      return [expense, ...preState ];\n    });\n    console.log(expense);\n  };\n\n  return (\n    <div className=\"app\">\n      <NewExpense onAddExpense={AddDataHandler}></NewExpense>\n      <Expenses expenses={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}